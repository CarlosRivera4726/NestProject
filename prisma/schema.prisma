// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PersonaRol {
  ADMIN
  PERSONA
  INSPECTOR
  DEVELOPER
  VIEWER
}

enum StatusLocation {
  AVAILABLE
  UNAVAILABLE
}

enum StatusInspection {
  AVAILABLE
  UNAVAILABLE
}

model Persona {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  name          String
  password      String
  role          PersonaRol      @default(DEVELOPER)
  created_at    DateTime        @default(now())
  updated_at    DateTime?       @default(now()) @updatedAt
  Inspector     Inspector[]
  Administrador Administrador[]
  Usuario       Usuario[]
}

model Inspector {
  id         Int          @id @default(autoincrement())
  persona    Persona      @relation(fields: [personaId], references: [id])
  personaId  Int
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now()) @updatedAt
  Inspection Inspection[]
  Location   Location     @relation(fields: [locationId], references: [id])
  locationId Int
}

model Administrador {
  id         Int      @id @default(autoincrement())
  persona    Persona  @relation(fields: [personaId], references: [id])
  personaId  Int      @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Usuario {
  id         Int          @id @default(autoincrement())
  persona    Persona      @relation(fields: [personaId], references: [id])
  personaId  Int          @unique
  created_at DateTime     @default(now())
  updated_at DateTime     @default(now()) @updatedAt
  Inspection Inspection[]
}

model Location {
  id          Int            @id @default(autoincrement())
  name        String
  coordinates String
  status      StatusLocation @default(AVAILABLE)
  created_at  DateTime       @default(now())
  updated_at  DateTime       @default(now()) @updatedAt
  Inspector   Inspector[]
  Inspection  Inspection[]
}

model Inspection {
  id          Int              @id @default(autoincrement())
  name        String
  status      StatusInspection @default(AVAILABLE)
  location    Location         @relation(fields: [locationId], references: [id])
  locationId  Int
  inspector   Inspector        @relation(fields: [inspectorId], references: [id])
  inspectorId Int
  usuario     Usuario          @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  created_at  DateTime         @default(now())
  updated_at  DateTime         @updatedAt
}
